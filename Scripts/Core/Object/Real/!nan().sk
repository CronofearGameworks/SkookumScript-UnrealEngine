//---------------------------------------------------------------------------------------
// Not a number (NaN) - represents an undefined or unrepresentable value.
// Good value to use as a default parameter when 0, -1, !max, etc. are all valid possible
// arguments.
//
// Use `nan?()` to test if a value is NaN - `num.nan?`
// Comparison with a NaN is very *strange* - the result is always the same depending on
// the comparison operator whether comparing against a finite value, infinity or another
// NaN and it does not matter whether the NaN is on the right or left side.
// 
//   Real!nan = num   // true
//   num = Real!nan   // true
//   Real!nan ~= num  // false
//   num ~= Real!nan  // false
//   Real!nan >= num  // true
//   num >= Real!nan  // true
//   Real!nan > num   // true
//   num > Real!nan   // true
//   Real!nan <= num  // false
//   num <= Real!nan  // false
//   Real!nan < num   // false
//   num < Real!nan   // false
//
// https://en.wikipedia.org/wiki/NaN
//
// Examples:
//   !invalid_num: Real!nan
//
//   // If type known, Real can be omitted
//   real_method(!nan)
//
//   println(Real!nan)  // prints "nan"
//
// See: nan?(), finite?(), infinite?(), !infinity(), !min(), !max()
//---------------------------------------------------------------------------------------

() Real 
